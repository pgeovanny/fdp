generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  cpf       String   @unique
  birthDate DateTime
  state     String
  area      String
  course    String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  responses Response[]
  favorites Favorite[]
  comments  Comment[]
}

enum Role { USER ADMIN }

model Question {
  id           String     @id @default(uuid())
  text         String
  type         QType
  difficulty   Difficulty
  legislation  String
  article      String
  justification String
  createdAt    DateTime   @default(now())
  responses    Response[]
  favorites    Favorite[]
  comments     Comment[]
}

enum QType { TRUEFALSE MULTIPLECHOICE }
enum Difficulty { EASY MEDIUM HARD }

model Response {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  correct    Boolean
  createdAt  DateTime @default(now())
}

model Favorite {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  createdAt  DateTime @default(now())
}

model Comment {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  text       String
  createdAt  DateTime @default(now())
}